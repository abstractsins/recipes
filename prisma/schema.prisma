generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/**
 * ────── ENUMS ──────
 */
enum Role {
  user
  admin
}

enum TagType {
  recipe
  ingredient
  season
}

/**
 * ---------- CORE USER ----------
 */
model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  nickname  String?
  username  String?
  role      Role      @default(user)
  lastLogin DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt

  /**
   * relations
   */
  recipes     Recipe[]
  ingredients Ingredient[]
  tags        UserTag[]
}

/**
 * ---------- TAG TABLES ----------
 */
model DefaultTag {
  id   Int     @id @default(autoincrement())
  name String
  type TagType

  recipeLinks     RecipeDefaultTag[]
  ingredientLinks IngredientDefaultTag[]

  @@unique([name, type])
}

model UserTag {
  id        Int     @id @default(autoincrement())
  name      String
  type      TagType
  createdBy Int
  owner     User    @relation(fields: [createdBy], references: [id])

  recipeLinks     RecipeUserTag[]
  ingredientLinks IngredientUserTag[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@unique([name, type, createdBy])
}

/**
 * ---------- JOIN TABLES ----------
 */
model RecipeDefaultTag {
  recipeId Int
  tagId    Int
  recipe   Recipe     @relation(fields: [recipeId], references: [id])
  tag      DefaultTag @relation(fields: [tagId], references: [id])

  @@id([recipeId, tagId])
}

model RecipeUserTag {
  recipeId Int
  tagId    Int
  recipe   Recipe  @relation(fields: [recipeId], references: [id])
  tag      UserTag @relation(fields: [tagId], references: [id])

  @@id([recipeId, tagId])
}

model IngredientDefaultTag {
  ingredientId Int
  tagId        Int
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])
  tag          DefaultTag @relation(fields: [tagId], references: [id])

  @@id([ingredientId, tagId])
}

model IngredientUserTag {
  ingredientId Int
  tagId        Int
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])
  tag          UserTag    @relation(fields: [tagId], references: [id])

  @@id([ingredientId, tagId])
}

/**
 * ---------- DOMAIN MODELS ----------
 */
model Recipe {
  id        Int      @id @default(autoincrement())
  name      String
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  /**
   * relations
   */
  ingredients RecipeIngredient[]
  defaultTags RecipeDefaultTag[]
  userTags    RecipeUserTag[]
  seasons     Season[]           @relation("RecipeSeasons")

  @@unique([userId, name])
}

model Ingredient {
  id          Int      @id @default(autoincrement())
  name        String
  main        String?
  variety     String?
  category    String?
  subcategory String?
  notes       String?
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt

  /**
   * relations
   */
  recipes     RecipeIngredient[]
  defaultTags IngredientDefaultTag[]
  userTags    IngredientUserTag[]
  seasons     Season[]               @relation("IngredientSeasons")

  @@unique([userId, name])
}

/**
 * ---------- SUPPORTING MODELS ----------
 */
model RecipeIngredient {
  id           Int        @id @default(autoincrement())
  recipeId     Int
  ingredientId Int
  recipe       Recipe     @relation(fields: [recipeId], references: [id])
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])
  quantity     String
  unit         String
  prepMethod   String?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @default(now())

  @@unique([recipeId, ingredientId])
}

model Season {
  id          Int          @id @default(autoincrement())
  name        String
  ingredients Ingredient[] @relation("IngredientSeasons")
  recipes     Recipe[]     @relation("RecipeSeasons")
}
