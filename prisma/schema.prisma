// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int          @id @default(autoincrement())
  email       String       @unique
  password    String
  nickname    String?
  username    String?
  lastLogin   DateTime?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @default(now()) @updatedAt
  recipes     Recipe[]
  ingredients Ingredient[]
  role        Role       @default(user)
}

enum Role {
  user
  admin
}

model Recipe {
  id          Int          @id @default(autoincrement())
  name        String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @default(now()) @updatedAt
  userId      Int
  user        User         @relation(fields: [userId], references: [id])
  ingredients Ingredient[]

  @@unique([userId, name]) // Unique per user
}

model Ingredient {
  id        Int      @id @default(autoincrement())
  name      String // freeform label
  main      String? // optional structured base
  variety   String? // optional variety
  category  String? // e.g. "vegetable", "spice"
  seasons   String[]
  notes     String? // freeform notes
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  recipes   Recipe[]
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@unique([userId, name])
}
